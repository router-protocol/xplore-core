name: Beta Release

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  packages: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  beta-release:
    name: Beta Release
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run tests
        run: |
          bun run typecheck
          bun run lint
          bun run test

      - name: Build package
        run: bun run build

      - name: Generate beta version
        id: version
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          COMMIT_SHA=$(git rev-parse --short HEAD)
          BETA_VERSION="0.0.0-beta.pr-${PR_NUMBER}.${COMMIT_SHA}"
          echo "beta_version=${BETA_VERSION}" >> $GITHUB_OUTPUT
          echo "Generated beta version: ${BETA_VERSION}"

      - name: Update package.json for beta
        run: |
          jq '.version = "${{ steps.version.outputs.beta_version }}"' package.json > temp.json
          mv temp.json package.json

      - name: Setup .npmrc for GitHub Packages
        run: |
          echo "@routerprotocol:registry=https://npm.pkg.github.com/" > ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}" >> ~/.npmrc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify package name
        run: |
          echo "Package already correctly scoped as @routerprotocol/xplore-ui"

      - name: Publish beta to GitHub Packages
        run: npm publish --tag beta
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on PR
        uses: actions/github-script@v8
        with:
          script: |
            const betaVersion = '${{ steps.version.outputs.beta_version }}';
            const packageName = `@routerprotocol/xplore-ui`;
            
            const comment = `ðŸš€ **Beta Release Published**
            
            A beta version has been published for this PR:
            
            \`\`\`bash
            # Install the beta version
            npm install ${packageName}@${betaVersion}
            
            # Or with Bun
            bun add ${packageName}@${betaVersion}
            \`\`\`
            
            **Version:** \`${betaVersion}\`
            **Registry:** GitHub Packages
            **Tag:** \`beta\`
            
            This beta version will be available for testing until the PR is merged or closed.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });